name: CI and Release

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --prefer-offline

      - name: Run formatting check
        run: pnpm exec prettier --check .

      - name: Build project
        run: pnpm run build

      - name: Cache VS Code
        id: vscode-cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.vscode-test
            .vscode-test
          key: vscode-test-${{ runner.os }}-${{ hashFiles('**/package.json') }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            vscode-test-${{ runner.os }}-${{ hashFiles('**/package.json') }}-
            vscode-test-${{ runner.os }}-

      - name: Show cache status
        run: |
          if [ "${{ steps.vscode-cache.outputs.cache-hit }}" == 'true' ]; then
            echo "âœ… VS Code cache hit - using cached version"
          else
            echo "ðŸ“¥ VS Code cache miss - downloading fresh version"
          fi

      - name: Run tests
        run: xvfb-run -a pnpm run test

      - name: Package extension
        run: pnpm run package

      - name: Upload extension artifact
        uses: actions/upload-artifact@v4
        with:
          name: vscode-extension-${{ matrix.node-version }}
          path: '*.vsix'
          retention-days: 7

  security:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --prefer-offline

      - name: Run security audit
        run: pnpm audit --audit-level moderate

      - name: Check for outdated dependencies
        run: pnpm outdated || true

  changesets:
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --prefer-offline

      - name: Create Release Pull Request or Publish
        id: changesets
        uses: changesets/action@v1
        with:
          publish: pnpm run build && pnpm exec vsce publish --pat ${{ secrets.VSCE_PAT }}
          title: 'chore: version packages'
          commit: 'chore: version packages'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          VSCE_PAT: ${{ secrets.VSCE_PAT }}

      - name: Create GitHub Release
        if: steps.changesets.outputs.publishedPackages
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.changesets.outputs.publishedPackages }}
          name: Release v${{ steps.changesets.outputs.publishedPackages }}
          body: |
            ## What's Changed

            This release includes the changes documented in the CHANGELOG.md file.

            ## Installation

            Install from the VS Code marketplace or download the VSIX file from the assets below.
          files: |
            *.vsix
          draft: false
          prerelease: false
